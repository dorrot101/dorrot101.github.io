name: Deploy Next.js site to Pages

on:
  # Runs on pushes to the default branch or can be triggered manually
  push:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          BASE_DIR="${{ github.workspace }}/dorrot-blog"
          echo "Using BASE_DIR: $BASE_DIR"
          ls -al "$BASE_DIR"

          if [ -f "${BASE_DIR}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            echo "base_dir=${BASE_DIR}" >> $GITHUB_OUTPUT
          elif [ -f "${BASE_DIR}/package.json" ]; then
            # If no yarn.lock but package.json exists, assume npm
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            echo "base_dir=${BASE_DIR}" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager in ${BASE_DIR}"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Configure GitHub Pages for Next.js
        uses: actions/configure-pages@v5
        with:
          # This automatically adjusts basePath and disables server-side image optimization.
          static_site_generator: next

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock', '**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock', '**/package-lock.json') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: dorrot-blog

      - name: Build Next.js site
        run: ${{ steps.detect-package-manager.outputs.runner }} next build && ${{ steps.detect-package-manager.outputs.runner }} next export
        working-directory: dorrot-blog

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dorrot-blog/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
